import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select";
import { Table, TableHead, TableHeader, TableRow, TableCell, TableBody } from "@/components/ui/table";
import { Download, Printer } from "lucide-react";

export default function SalesForm() {
  const [formData, setFormData] = useState({
    phone: "",
    location: "",
    price: "",
    currency: "$",
    company: ""
  });

  const [data, setData] = useState([]);
  const [search, setSearch] = useState("");

  const handleChange = (field, value) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    setData(prev => [...prev, formData]);
    setFormData({ phone: "", location: "", price: "", currency: "$", company: "" });
  };

  const filteredData = data.filter(entry =>
    entry.phone.includes(search) || entry.location.includes(search)
  );

  const handlePrint = () => {
    window.print();
  };

  const handleExport = () => {
    const rows = filteredData.map(d => [d.phone, d.location, `${d.price}${d.currency}`, d.company]);
    const csv = ["Phone,Location,Price,Company", ...rows.map(r => r.join(","))].join("\n");
    const blob = new Blob([csv], { type: "text/csv;charset=utf-8;" });
    const url = URL.createObjectURL(blob);
    const link = document.createElement("a");
    link.href = url;
    link.setAttribute("download", "sales_data.csv");
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
  };

  return (
    <div className="max-w-4xl mx-auto mt-10 space-y-6">
      <h1 className="text-3xl font-bold text-center">Malin Collection</h1>

      <Card className="shadow-xl">
        <CardContent className="space-y-4 p-6">
          <h2 className="text-xl font-bold">បញ្ចូលការលក់ថ្មី</h2>
          <Input placeholder="លេខទូរស័ព្ទ" value={formData.phone} onChange={(e) => handleChange("phone", e.target.value)} />
          <Input placeholder="ទីតាំង" value={formData.location} onChange={(e) => handleChange("location", e.target.value)} />
          <div className="flex gap-2">
            <Input placeholder="តម្លៃ" value={formData.price} onChange={(e) => handleChange("price", e.target.value)} />
            <Select value={formData.currency} onValueChange={(val) => handleChange("currency", val)}>
              <SelectTrigger><SelectValue /></SelectTrigger>
              <SelectContent>
                <SelectItem value="$">$</SelectItem>
                <SelectItem value="៛">៛</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <Select value={formData.company} onValueChange={(val) => handleChange("company", val)}>
            <SelectTrigger><SelectValue placeholder="ជ្រើសរើសក្រុមហ៊ុន" /></SelectTrigger>
            <SelectContent>
              <SelectItem value="Vireak Buntam">វិរៈប៊ុនថាំ</SelectItem>
              <SelectItem value="J&T">J&T</SelectItem>
            </SelectContent>
          </Select>
          <Button onClick={handleSubmit} className="w-full">រក្សាទុក</Button>
        </CardContent>
      </Card>

      <Card>
        <CardContent className="p-4">
          <div className="flex justify-between items-center mb-4">
            <Input placeholder="ស្វែងរកតាមលេខ / ទីតាំង" value={search} onChange={(e) => setSearch(e.target.value)} className="w-1/2" />
            <div className="flex gap-2">
              <Button onClick={handlePrint} variant="outline"><Printer className="mr-2" size={16} />បោះពុម្ព</Button>
              <Button onClick={handleExport} variant="outline"><Download className="mr-2" size={16} />Export Excel</Button>
            </div>
          </div>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>លេខទូរស័ព្ទ</TableHead>
                <TableHead>ទីតាំង</TableHead>
                <TableHead>តម្លៃ</TableHead>
                <TableHead>ក្រុមហ៊ុន</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {filteredData.map((entry, index) => (
                <TableRow key={index}>
                  <TableCell>{entry.phone}</TableCell>
                  <TableCell>{entry.location}</TableCell>
                  <TableCell>{entry.price}{entry.currency}</TableCell>
                  <TableCell>{entry.company}</TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>
    </div>
  );
}
